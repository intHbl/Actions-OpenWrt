#!/bin/bash


cat <<EOF

# 防火墙 打开端口
python.exe -m http.server -b 0.0.0.0 -d .  28080

telnet 192.168.1.1

wget http://192.168.1.2:28080/openwrt-ramips-mt7621-xiaomi_mi-router-4a-gigabit-squashfs-sysupgrade.bin
wget http://192.168.1.3:28080/openwrt-ramips-mt7621-xiaomi_mi-router-4a-gigabit-squashfs-sysupgrade.bin
wget http://192.168.1.199:28080/openwrt-ramips-mt7621-xiaomi_mi-router-4a-gigabit-squashfs-sysupgrade.bin


# erase 长度>=需要输入的长度
flash erase 0x180000 0xcd2000
flash write 0x180000 0x80001000 0xcd0462

# env  , 开启env(envconf,在web界面弄好一点)
## 空格怎么处理!! ?  双引号(单引号不行)
autoboot.command=boot flash 0x180000
env list
env set autoboot.command "boot flash 0x180000"
env set key value
env save

# 重启
reset

# 还需要解决信号问题 eeprom


EOF


# 下面不好使了
exit 0
# 最新版执行失败, 不执行. 也许 已经适配了
# exit 0 
#  还是不行啊.   initramfs可以启动, but  sysupgrade 不能启动!!!
# 所以 修改脚本. # v23.05.2 比 # v21.02.5 多了个 xiaomi_mi-router-4a-gigabit-v2
##  使用 grep  'xiaomi_mi-router-4a-gigabit$'

### 修改为{R4A千兆版,R3G_V2}Breed直刷版

# ref:
## https://www.right.com.cn/FORUM/thread-4052254-1-1.html
## from https://github.com/XXKDB/MI-R4A-breed-openwrt/blob/main/MI-R4A/diy-part1.sh

from_dts="mt7621_youhua_wr1200js.dts"
# v21.02.5
dts="mt7621_xiaomi_mi-router-4a-3g-v2.dtsi"
# v23.05.2
dst="mt7621_xiaomi_mi-router-4a-common.dtsi"

line1=$(grep  -a -n -e '&spi0 {' target/linux/ramips/dts/$dts | head -n 1 |cut -d ":" -f 1)
line2=$(grep  -a -n -e '&pcie {' target/linux/ramips/dts/$dts | head -n 1 |cut -d ":" -f 1)
line2=$(expr $line2 - 1)
line2=$(echo $line2"d")
sed -i $line1,$line2 target/linux/ramips/dts/$dts

{
    grep  -Pzo '&spi0[\s\S]*};[\s]*};[\s]*};[\s]*};' target/linux/ramips/dts/$from_dts | tr '\000' '\n'
    echo ""
} > youhua.txt

line1=$((line1 - 1))
line_replace="${line1}r"
sed -i "$line_replace youhua.txt" target/linux/ramips/dts/$dts
wcl="$(cat youhua.txt | wc -l)"
cat target/linux/ramips/dts/$dts | head -n "$((line1+wcl+2))" | tail -n $((wcl+5))
#rm -rf youhua.txt


## 2.修改mt7621.mk
devices="xiaomi_mi-router-4a-gigabit xiaomi_mi-router-3g-v2"

device_from="youhua_wr1200js"
zz0=$(grep  -a -n -e "define Device/$device_from" target/linux/ramips/image/mt7621.mk | head -n 1 |cut -d ":" -f 1)
zz00=$((zz0 + 8))

# size="16064k"
size="$(cat target/linux/ramips/image/mt7621.mk | head -n "$zz00" | tail -n 8 | grep "IMAGE_SIZE" | grep -Eo "[1-9][0-9]*.{0,1}" | head -n 1 )"
echo "size=$size"

ff(){
    local zz0
    local zz00
    local n
    zz0=$(grep  -a -n -e "define Device/$device$" target/linux/ramips/image/mt7621.mk | head -n 1 | cut -d ":" -f 1)
    zz00=$((zz0 + 8))
    
    # size="16064k"
    n="$(cat target/linux/ramips/image/mt7621.mk | head -n "$zz00" | tail -n 8 | grep -n "IMAGE_SIZE" | grep -Eo "^[1-9][0-9]*")"
    ## openwrt . v21.02.5  == +3
    zz1=$((zz0 + n))

    sed  -i "${zz1}s/IMAGE_SIZE := .*/IMAGE_SIZE := $size/" target/linux/ramips/image/mt7621.mk

    # show debug info
    cat target/linux/ramips/image/mt7621.mk | head -n "$zz00" | tail -n 12
}

for i in $devices ; do
    echo "############# $i"
    device=$i
    ff
done


